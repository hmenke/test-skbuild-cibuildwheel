name: 'setup-vcpkg'
inputs:
  args:
    description: 'Extra arguments for vcpkg install'
    required: false

runs:
  using: "composite"
  steps:
    # https://learn.microsoft.com/en-us/vcpkg/users/binarycaching#gha
    - name: Set up environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
          const { join } = require('path');
          const {
            GITHUB_ACTION_PATH,
            GITHUB_WORKSPACE,
            VCPKG_BINARY_SOURCES = 'clear;x-gha,readwrite',
            VCPKG_DEFAULT_TRIPLET = '${{ runner.arch }}-${{ runner.os }}'.toLowerCase(),
            VCPKG_DISABLE_METRICS = '1',
            VCPKG_OVERLAY_PORTS = join(GITHUB_ACTION_PATH, 'overlay'),
            VCPKG_INSTALLATION_ROOT = join(GITHUB_ACTION_PATH, 'vcpkg'),
          } = process.env;
          core.exportVariable('VCPKG_BINARY_SOURCES', VCPKG_BINARY_SOURCES);
          core.exportVariable('VCPKG_DISABLE_METRICS', VCPKG_DISABLE_METRICS);
          core.exportVariable('VCPKG_OVERLAY_PORTS', VCPKG_OVERLAY_PORTS);
          core.exportVariable('VCPKG_INSTALLATION_ROOT', VCPKG_INSTALLATION_ROOT);
          core.exportVariable('__VCPKG_INSTALLED', (VCPKG_INSTALLATION_ROOT !== join(GITHUB_ACTION_PATH, 'vcpkg').toString()));
          core.exportVariable(
            'CMAKE_TOOLCHAIN_FILE',
            join(VCPKG_INSTALLATION_ROOT, 'scripts', 'buildsystems', 'vcpkg.cmake'),
          );
          core.addPath(join(GITHUB_WORKSPACE, 'vcpkg_installed', VCPKG_DEFAULT_TRIPLET, 'bin'));

    - name: Checkout vcpkg
      if: env.__VCPKG_INSTALLED == 'false'
      uses: actions/checkout@v3
      with:
        repository: microsoft/vcpkg
        path: ${{ env.VCPKG_INSTALLATION_ROOT }}
        ref: bd2b54836beed96e1efbe9aaf8ee800f5448856d

    - name: Bootstrap vcpkg
      if: runner.os != 'Windows' && env.__VCPKG_INSTALLED == 'false'
      shell: bash
      run: ${{ env.VCPKG_INSTALLATION_ROOT }}/bootstrap-vcpkg.sh

    - name: Bootstrap vcpkg
      if: runner.os == 'Windows' && env.__VCPKG_INSTALLED == 'false'
      shell: cmd
      run: ${{ env.VCPKG_INSTALLATION_ROOT }}\bootstrap-vcpkg.bat
