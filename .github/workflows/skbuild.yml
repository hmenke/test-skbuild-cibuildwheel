name: skbuild

on:
  push:
  pull_request:
  workflow_call:
  workflow_dispatch:

# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  VERBOSE: 1
  VCPKG_DEFAULT_TRIPLET: "x64-windows"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  wheel:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
        - os: macos-latest
        - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: echo "CIBW_BEFORE_ALL=yum install -y gsl-devel" >> $GITHUB_ENV

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: brew install gsl

    # https://learn.microsoft.com/en-us/vcpkg/users/binarycaching#gha
    - uses: actions/github-script@v7
      if: runner.os == 'Windows'
      with:
        script: |
          const { join } = require('path');
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
          core.exportVariable(
            'CMAKE_TOOLCHAIN_FILE',
            join(process.env.VCPKG_INSTALLATION_ROOT, 'scripts', 'buildsystems', 'vcpkg.cmake'),
          );
          core.addPath(
            join(process.env.GITHUB_WORKSPACE, 'vcpkg_installed', process.env.VCPKG_DEFAULT_TRIPLET, 'bin'),
          );

    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      run: vcpkg install

    - uses: pypa/cibuildwheel@v2.16
      env:
        CIBW_ENVIRONMENT_PASS_LINUX: VERBOSE

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl
